# Generated by Django 4.1.6 on 2023-03-09 10:32

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import profile_app.managers
import profile_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('about', models.TextField(max_length=5000, verbose_name='О себе')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user/user_avatar/%Y-%m-%d/', verbose_name='Аватарка')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес проживания')),
                ('phone_num', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('url_github', models.URLField(blank=True, null=True, verbose_name='Ссылка на свой github')),
                ('hide_fields', models.JSONField(default=dict)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', profile_app.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Содержимое')),
                ('poster', models.ImageField(blank=True, null=True, upload_to=profile_app.models.user_directory_path, verbose_name='Постер')),
                ('publish_time', models.DateTimeField(auto_now_add=True)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='user_dislikes', to=settings.AUTH_USER_MODEL, verbose_name='Дизлайки')),
                ('likes', models.ManyToManyField(blank=True, related_name='user_likes', to=settings.AUTH_USER_MODEL, verbose_name='Лайки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_posts', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Пост пользователя',
                'verbose_name_plural': 'Посты пользователей',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribe_in_user', to=settings.AUTH_USER_MODEL, verbose_name='Подписчики')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Подписки и подписчики',
                'verbose_name_plural': 'Подписки и подписчики',
            },
        ),
        migrations.CreateModel(
            name='CommentUserPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=5000, verbose_name='Содержимое')),
                ('datetime_published', models.DateTimeField(auto_now_add=True, verbose_name='Время публикации')),
                ('comment_user_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_user_post', to='profile_app.userpost', verbose_name='Комментарии к посту пользователя')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Комментарий пользователя',
                'verbose_name_plural': 'Комментарии пользователей',
                'abstract': False,
            },
        ),
    ]
